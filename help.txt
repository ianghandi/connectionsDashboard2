#!/bin/bash

# Name of the targets file
TARGETS_FILE="PAtargets.txt"

# Get the hostname
HOSTNAME=$(hostname)

# Define output directory relative to script location
SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)
OUTPUT_DIR="$SCRIPT_DIR/results/PA"
mkdir -p "$OUTPUT_DIR"

# Output file path
OUTPUT_FILE="$OUTPUT_DIR/connectivity_results_${HOSTNAME}.txt"

# Read all targets into an array
mapfile -t TARGETS < "$SCRIPT_DIR/$TARGETS_FILE"
TOTAL=${#TARGETS[@]}

# Progress counter
CURRENT=0

# Clear or create output file
echo "Connectivity Test Results from $HOSTNAME" > "$OUTPUT_FILE"
echo "Direct Connection (No Proxy) using curl telnet" >> "$OUTPUT_FILE"
echo "Test Timestamp: $(date)" >> "$OUTPUT_FILE"
echo "-----------------------------------------" >> "$OUTPUT_FILE"

# Function to display progress
show_progress() {
  local PROGRESS=$((CURRENT * 100 / TOTAL))
  printf "\rProgress: [%-50s] %d%%" $(printf "%0.s#" $(seq 1 $((PROGRESS / 2)))) "$PROGRESS"
}

# Iterate through targets
for TARGET in "${TARGETS[@]}"; do
  if [[ -n "$TARGET" ]]; then
    ((CURRENT++))
    show_progress

    # Extract host and port
    HOST=$(echo "$TARGET" | cut -d':' -f1)
    PORT=$(echo "$TARGET" | cut -d':' -f2)

    # Use curl with telnet protocol to test connectivity
    CURL_OUTPUT=$(curl -v telnet://$HOST:$PORT -m 5 2>&1)

    if echo "$CURL_OUTPUT" | grep -qi "Connection timed out"; then
      echo "$TARGET - FAILURE (TIMEOUT)" >> "$OUTPUT_FILE"
    elif echo "$CURL_OUTPUT" | grep -qi "Could not resolve host"; then
      echo "$TARGET - WARNING (Could not resolve hostname)" >> "$OUTPUT_FILE"
    elif echo "$CURL_OUTPUT" | grep -qi "Connected to"; then
      echo "$TARGET - SUCCESS (Connected)" >> "$OUTPUT_FILE"
    else
      echo "$TARGET - UNKNOWN RESULT ($CURL_OUTPUT)" >> "$OUTPUT_FILE"
    fi
  fi

done

# Final newline after progress bar
echo

echo "-----------------------------------------" >> "$OUTPUT_FILE"
echo "Connectivity Test Completed." >> "$OUTPUT_FILE"

echo "Results saved to $OUTPUT_FILE"
